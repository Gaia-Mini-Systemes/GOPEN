             pgm        parm(&listname &qtempfile)
             /* Ce programme récupère une liste à partir de 'yum list &listname' et met le  */
             /* résultat dans qtemp/&qtempfile avec trois colonnes: PKG (nom du package),   */
             /* VER (version du package), SRC (source du package, sans le @)                */
             /* Les listes sont récupérées à partir du cache, il faut faire 'check-update'  */
             /* séparément pour etre sur d'avoir la liste des dernières mises à jour        */

             dcl        &listname *CHAR 10 /* Type de liste à récupérer (voir yum help list) */
             dcl        &qtempfile *CHAR 10 /* Table où stocker la liste */

             dcl        &qshcmd *CHAR 2048 /* Commande QSH */
             dcl        &lstraw *CHAR 10 /* Table sur qtemp où stocker la sortie de QSH */
             dcl        &lstnum *CHAR 10 /* Table sur qtemp où stocker la sortie avec ID */

             /* On définit les noms des tables sur qtemp */
             chgvar     &lstraw 'yumlstraw'
             chgvar     &lstnum 'yumlstnum'

             /* On commence par récupérer la liste                                              */
             /* '-C' permet d'utiliser le cache pour éviter des erreurs réseaux                 */
             /* '2> /dev/null' permet d'ignorer les erreurs (y compris si un autre yum tourne)  */
             /* 'tail -n +2' permet de sauter la première ligne qui est le titre de la liste    */
             /* 'tr '\n' ' '' permet de mettre toutes les lignes sur une seule ligne            */
             /* 'tr -s ' '' permet de raccourcir les espaces vides en un seul espace            */
             /* 'tr -d '@'' permet de supprimer tous les @ (qui provoquent des erreurs avec CL) */
             /* 'tr ' ' '\n'' permet enfin de transformer les séparateurs (espaces vides) en    */
             /*               retours à la ligne pour avoir package, version, source, sur       */
             /*               chaque ligne                                                      */
             chgvar     &qshcmd ('yum list -C ''' *TCAT &listname *TCAT ''' 2> /dev/null | +
                          tail -n +2 | tr ''\n'' '' '' | tr -s '' '' | tr -d ''@'' | tr '' '' +
                          ''\n''')
             call       pgm(QSHEXEC) parm(&qshcmd &lstraw)

             /* On insère les lignes dans une table avec un ID pour les séparer              */
             /* Les commandes 'yum list' donnent trois colonnes par package (donc par ligne) */
             /* On parse ça avec les commandes qsh pour avoir une colonne par ligne, toutes  */
             /* à la suite des autres. De la sorte on sait que toutes les 3 lignes on a un   */
             /* package différent, on peut accéder dans l'ordre au nom du package, version,  */
             /* source, puis nom du package suivant, etc                                     */
             dltf       file(qtemp/&lstnum)
             monmsg     CPF0000
             runsql     sql('create table qtemp/' *TCAT &lstnum *BCAT '(id INT GENERATED BY +
                          DEFAULT AS IDENTITY, rval CHAR(64) CCSID 1147 NOT NULL DEFAULT +
                          '''')') commit(*none)
             runsql     sql('insert into qtemp/' *TCAT &lstnum *TCAT '(rval) select * from +
                          qtemp/' *TCAT &lstraw) commit(*none)

             /* On peut maintenant créer notre table finale */
             dltf       file(qtemp/&qtempfile)
             monmsg     CPF0000
             runsql     sql('create table qtemp/' *TCAT &qtempfile *BCAT '(id INT GENERATED BY +
                          DEFAULT AS IDENTITY, PKG CHAR(64) CCSID 1147 NOT NULL DEFAULT '''', +
                          VER CHAR(32) CCSID 1147 NOT NULL DEFAULT '''', SRC CHAR(32) CCSID +
                          1147 NOT NULL DEFAULT '''')') commit(*none)

             /* On commence par insérer les packages */
             runsql     sql('insert into qtemp/' *TCAT &qtempfile *BCAT '(PKG) select rval +
                          from qtemp/' *TCAT &lstnum *BCAT 'where MOD(id, 3) = 1') +
                          commit(*none)

             /* On peut maintenant insérer les versions et sources de chaque package */
             runsql     sql('update qtemp/' *TCAT &qtempfile *BCAT 'I set VER = (select rval +
                          from qtemp/' *TCAT &lstnum *BCAT 'where MOD(id, 3) = 2 AND id / 3 = +
                          I.id - 1), SRC = (select rval from qtemp/' *TCAT &lstnum *BCAT +
                          'where MOD(id, 3) = 0 AND id / 3 = I.id)') commit(*none)

             endpgm